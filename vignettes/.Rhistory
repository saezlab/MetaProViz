knitr::kable(PathwayInput[1:5,] , caption = "Summary of MCA: 2 Conditions.", row.names=FALSE)
#MetaProViz
#library(MetaProViz)
#dependencies
library(tidyverse)
# check load data again from inst/extdata
devtools::load_all("C:/Users/chris/Documents/GitHub/MetaProViz")#only loaded until package is online
MetaProViz::toy_data(data="Standard")
#test <- load(MS51_RawPeakData.csv)#I need to save it as .RDS file to load it from there
#saveRDS(globalenv(), "C:/Users/chris/Documents/GitHub/MetaProViz/inst/extdataStandard.rds")
# Check how our data looks like:
knitr::kable(Intra[1:5, 1:7], caption = "Preview of the DF `Intra` including columns with sample information and metabolite ids with their measured values.")
MetaProViz::toy_data(data="Pathways")
# Check how our data looks like:
knitr::kable(Pathways[1:5,], caption = "Preview of the DF `Pathways` including the trivial metabolite identifiers used in the experiment as well as KEGG IDs and pathway information.")
Intra_M <- Intra[1:47,-c(2:4)]%>%
column_to_rownames("Code")
SampleInfo <-Intra[c(1:47),c(1:4)]%>%
column_to_rownames("Code")
#Do the pool control first!
PPres <- MetaProViz::Preprocessing(Input_data=Intra_M,
Experimental_design=SampleInfo,
Feature_Filtering = "Modified",
Feature_Filt_Value = 0.8,
TIC_Normalization = TRUE,# As we have raw data we will perform total ion count normalisation
MVI=TRUE, #We assume the values are not mising at random and perform half minimum missing value imputation
HotellinsConfidence = 0.99,# We perform outlier testing using 0.99 confidence intervall
ExportQCPlots = TRUE,# we will save the quality control plots
CoRe = FALSE,# as we have a standard experiment and not a Consumption-Release (CoRe) experiment we set this to FALSE
Save_as = "svg") #we will save the QC plots as .svg files
Intra_Preprocessed <- PPres[["Processed_data"]]
# Check how our data looks like:
knitr::kable(Intra_Preprocessed[29:32, 1:7]%>%rownames_to_column("Code"), caption = "Preview of the pre-processing results, which has an additional column `Outlier` including the results of Hotellins T2.", row.names=FALSE)
Intra_Preprocessed <- Intra_Preprocessed[-29,]#remove MS55_29
Intra_Preprocessed <- MetaProViz::ReplicateSum(Input_data=Intra_Preprocessed)
DMA_HK2v786O <- MetaProViz::DMA(Input_data=Intra_Preprocessed[,-c(1:3)], #we need to remove columns that do not include metabolite measurements
Experimental_design=Intra_Preprocessed[,c(1:2)],#we only maintain the information columns we need here
Condition1="HK2",
Condition2="786-O",
STAT_pval ="t.test",
STAT_padj="fdr",
Input_Pathways = Pathways[,c(1,4)],
OutputName='DMA_HK2v786O',
CoRe=FALSE,
Plot = TRUE,
Save_as = "svg")
# Check how our data looks like:
knitr::kable(DMA_HK2v786O[1:6,], caption = "Preview of the DMA results for the comparison of HK2 versus 786-O cells.", row.names=FALSE)
#Perform the other comparisons;
DMA_HK2v786M1A <- MetaProViz::DMA(Input_data=Intra_Preprocessed[,-c(1:3)], #we need to remove columns that do not include metabolite measurements
Experimental_design=Intra_Preprocessed[,c(1:2)],#we only maintain the information columns we need here
Condition1="HK2",
Condition2="786-M1A",
STAT_pval ="t.test",
STAT_padj="fdr",
Input_Pathways = Pathways[,c(1,4)],
OutputName='DMA_HK2v786M1A',
CoRe=FALSE,
Plot = TRUE,
Save_as = "svg")
DMA_HK2v786M2A <- MetaProViz::DMA(Input_data=Intra_Preprocessed[,-c(1:3)], #we need to remove columns that do not include metabolite measurements
Experimental_design=Intra_Preprocessed[,c(1:2)],#we only maintain the information columns we need here
Condition1="HK2",
Condition2="786-M2A",
STAT_pval ="t.test",
STAT_padj="fdr",
Input_Pathways = Pathways[,c(1,4)],
OutputName='DMA_HK2v786M2A',
CoRe=FALSE,
Plot = TRUE,
Save_as = "svg")
#Example of all possible flows:
MetaProViz::MCA_rules(data="2Cond")
# Check how our data looks like:
knitr::kable(MCA_2Cond, caption = "Metabolite Clustering Analysis: 2 Conditions.", row.names=FALSE)
#easyalluvial --> update allulvial plot package used to this one!
easyalluvial::alluvial_wide(MCA_2Cond[,c(1:2,4)], fill_by = 'last_variable' )
easyalluvial::alluvial_wide(MCA_2Cond[,c(1:2,5)], fill_by = 'last_variable' )
MCAres <- MetaProViz::MCA_2Cond(Cond1_File=DMA_HK2v786O,
Cond2_File=DMA_HK2v786M1A,
MetaboliteID= "Metabolite",
Cond1ValueCol="Log2FC",
Cond1PadjCol="p.adj",
Cond2ValueCol="Log2FC",
Cond2PadjCol="p.adj",
Cond1_padj_cutoff= 0.05,
Cond2_padj_cutoff = 0.05,
Cond1_FC_cutoff= 1,
Cond2_FC_cutoff = 1,
backgroundMethod="C1&C2",
OutputFileName = "MCA_2Cond")
# Check how our data looks like:
knitr::kable(Summary_MCA_2Cond , caption = "Summary of MCA: 2 Conditions.", row.names=FALSE)
View(MCAres)
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=10,
maxGSSize=1000 ,
Save_as="pdf",
pCutoff=0.2,
PercentageCutoff=10
)
PathwayInput <- Pathways[,c(1,4)]%>%
rename("term"="Pathway")
PathwayInput$Description <- PathwayInput$term
#
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=10,
maxGSSize=1000 ,
Save_as="pdf",
pCutoff=0.2,
PercentageCutoff=10
)
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=10,
maxGSSize=1000 ,
Save_as=pdf,
pCutoff=0.2,
PercentageCutoff=10
)
devtools::load_all("C:/Users/chris/Documents/GitHub/MetaProViz")#only loaded until package is online
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=10,
maxGSSize=1000 ,
Save_as="pdf",
pCutoff=0.2,
PercentageCutoff=10
)
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=10,
maxGSSize=1000 ,
Save_as="svg",
pCutoff=0.2,
PercentageCutoff=10
)
Save_as="svg"
Save_as_options <- c("svg","png", "pdf")
if(Save_as %in% Save_as_options == FALSE | is.null(Save_as)==FALSE){
stop("Check input. The selected Save_as option is not valid. Please set Save_as=NULL or select one of the following: ",paste(Save_as_options,collapse = ", "),"." )
}
if(Save_as %in% Save_as == FALSE | is.null(Save_as)==FALSE){
stop("Check input. The selected Save_as option is not valid. Please set Save_as=NULL or select one of the following: ",paste(Save_as_options,collapse = ", "),"." )
}
Save_as %in% Save_as_options
Save_as_options <- c("svg","png", "pdf")
if(Save_as %in% Save_as_options == FALSE){
stop("Check input. The selected Save_as option is not valid. Please set Save_as=NULL or select one of the following: ",paste(Save_as_options,collapse = ", "),"." )
} else if(is.null(Save_as)==FALSE){
stop("Check input. The selected Save_as option is not valid. Please set Save_as=NULL or select one of the following: ",paste(Save_as_options,collapse = ", "),"." )
}
Save_as_options <- c("svg","png", "pdf")
if(Save_as %in% Save_as_options == FALSE){
stop("Check input. The selected Save_as option is not valid. Please set Save_as=NULL or select one of the following: ",paste(Save_as_options,collapse = ", "),"." )
}
is.null(Save_as)
Save_as %in% Save_as_options
is.null(Save_as)
Save_as_options <- c("svg","png", "pdf")
if(Save_as %in% Save_as_options == FALSE & is.null(Save_as)==FALSE){
stop("Check input. The selected Save_as option is not valid. Please set Save_as=NULL or select one of the following: ",paste(Save_as_options,collapse = ", "),"." )
}
devtools::load_all("C:/Users/chris/Documents/GitHub/MetaProViz")#only loaded until package is online
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=10,
maxGSSize=1000 ,
Save_as="svg",
pCutoff=0.2,
PercentageCutoff=10
)
MetaProViz::MC_ORA(Input_data=MCAres,
MetabCluster_lab="RG2_Significant",
RemoveBackground=TRUE,
PathwayFile=PathwayInput,
PathwayName="Selfmade",
minGSSize=3,
maxGSSize=1000 ,
Save_as="svg",
pCutoff=0.2,
PercentageCutoff=10
)

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Processing.R
\name{processing}
\alias{processing}
\title{Data preprocessing and normalization}
\usage{
processing(
  data,
  metadata_sample = NULL,
  metadata_info = c(Conditions = "Conditions"),
  featurefilt = "Modified",
  cutoff_featurefilt = 0.8,
  tic = TRUE,
  mvi = TRUE,
  mvi_percentage = 50,
  hotellins_confidence = 0.99,
  core = FALSE,
  save_plot = "svg",
  save_table = "csv",
  print_plot = TRUE,
  path = NULL
)
}
\arguments{
\item{data}{SummarizedExperiment or data frame. If SummarizedExperiment,
metadata_sample is extracted from colData. If data frame, provide unique
sample identifiers as row names and metabolite numerical values in
columns with metabolite identifiers as column names. Use NA for
undetected metabolites.}

\item{metadata_sample}{Data frame (optional). Only required if data is not a
SummarizedExperiment. Contains information about samples, combined with
input data based on unique sample identifiers used as row names. Must
contain Conditions column. If experiment has no multiple conditions,
assign all samples to same condition. Default: NULL.}

\item{metadata_info}{Named character vector (optional). Contains names of experimental
parameters: c(Conditions="ColumnName",
Biological_Replicates="ColumnName"). Column "Conditions" (mandatory)
contains sample conditions (e.g., "N"/"T" or "Normal"/"Tumor"), used for
feature filtering and PCA color coding. Column "BiologicalReplicates"
(optional) contains numerical values. For core=TRUE, must also add
core_norm_factor="ColumnName" and core_media="ColumnName". Column
core_norm_factor is used for normalization; core_media specifies media
controls in Conditions. Default: c(Conditions="Conditions").}

\item{featurefilt}{Character (optional). If NULL, no feature filtering is performed. If
"Standard", applies 80\% filtering rule (Bijlsma et al., 2006) on
metabolite features across whole dataset. If "Modified", filtering is
done per condition and Conditions column must be provided (Yang et al.,
2015). Default: "Standard".}

\item{cutoff_featurefilt}{Numeric (optional). Percentage threshold for feature filtering. Default:
0.8.}

\item{tic}{Logical (optional). Whether total ion count normalization is performed.
Default: TRUE.}

\item{mvi}{Logical (optional). Whether missing value imputation (MVI) based on half
minimum is performed. Default: TRUE.}

\item{mvi_percentage}{Numeric (optional). Percentage (0-100) of imputed value based on minimum
value. Default: 50.}

\item{hotellins_confidence}{Numeric (optional). Confidence level for outlier identification in
Hotelling's T2 test. Default: 0.99.}

\item{core}{Logical (optional). Whether consumption-release experiment was performed
and core value should be calculated. If TRUE, provide normalization
factor column "core_norm_factor" in metadata_sample where Conditions
column matches. The normalization factor must be numerical value from
growth rate (growth curve) or growth factor (ratio of cell count/protein
quantification at start vs. end point). Additionally, control media
samples must be available in data and defined as "core_media" in
Conditions column of metadata_sample. Default: FALSE.}

\item{save_plot}{Character (optional). File type of output plots: "svg", "png", "pdf". If
NULL, plots are not saved. Default: "svg".}

\item{save_table}{Character (optional). File type of output table: "csv", "xlsx", "txt".
If NULL, tables are not saved. Default: "csv".}

\item{print_plot}{Logical (optional). Whether to print overview of resulting plots.
Default: TRUE.}

\item{path}{Character (optional). Path to folder where results should be saved.
Default: NULL.}
}
\value{
List with two elements: DF (all output tables generated) and Plot (all
plots generated).
}
\description{
Applies modular normalization including 80\% filtering rule, total-ion count
normalization, missing value imputation, and outlier detection using
Hotelling's T2 test.
}
\examples{
data(intracell_raw_se)
ResI <- processing(
    data = intracell_raw_se,
    metadata_info = c(
        Conditions = "Conditions",
        Biological_Replicates = "Biological_Replicates"
    )
)

data(intracell_raw)
Intra <- intracell_raw \%>\% tibble::column_to_rownames("Code")
ResI <- processing(
    data = Intra[-c(49:58), -c(1:3)],
    metadata_sample = Intra[-c(49:58), c(1:3)],
    metadata_info = c(
        Conditions = "Conditions",
        Biological_Replicates = "Biological_Replicates"
    )
)

data(medium_raw)
Media <- medium_raw \%>\% tibble::column_to_rownames("Code")
ResM <- processing(
    data = Media[-c(40:45), -c(1:3)],
    metadata_sample = Media[-c(40:45), c(1:3)],
    metadata_info = c(
        Conditions = "Conditions",
        Biological_Replicates = "Biological_Replicates",
        core_norm_factor = "GrowthFactor",
        core_media = "blank"
    ),
    core = TRUE
)

}

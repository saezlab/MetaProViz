% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DifferentialMetaboliteAnalysis.R
\name{dma}
\alias{dma}
\title{Differential metabolite analysis}
\usage{
dma(
  data,
  metadata_sample = NULL,
  metadata_info = c(Conditions = "Conditions", Numerator = NULL, Denominator = NULL),
  pval = "lmFit",
  padj = "fdr",
  metadata_feature = NULL,
  core = FALSE,
  vst = FALSE,
  shapiro = TRUE,
  bartlett = TRUE,
  transform = TRUE,
  save_plot = "svg",
  save_table = "csv",
  print_plot = TRUE,
  path = NULL
)
}
\arguments{
\item{data}{SummarizedExperiment or data frame. If SummarizedExperiment,
metadata_sample is extracted from colData and metadata_feature from
rowData. If data frame, provide unique sample identifiers as row names
and metabolite numerical values in columns with metabolite identifiers
as column names. Use NA for undetected metabolites.}

\item{metadata_sample}{Data frame (optional). Only required if data is not a
SummarizedExperiment. Contains metadata information about samples,
combined with input data based on unique sample identifiers used as row
names. Default: NULL.}

\item{metadata_info}{Named character vector (optional). Includes conditions column
information on numerator or denominator: c(Conditions="ColumnName",
Numerator="ColumnName", Denominator="ColumnName"). Denominator and
Numerator specify which comparisons are performed (one-vs-one,
all-vs-one, all-vs-all). Denominator=NULL and Numerator=NULL selects all
conditions and performs multiple all-vs-all comparisons. Log2FC values
are obtained by dividing numerator by denominator, thus positive Log2FC
values indicate higher expression in numerator. Default:
c(conditions="Conditions", numerator=NULL, denumerator=NULL).}

\item{pval}{Character (optional). Abbreviation of the selected test to calculate
p-value. For one-vs-one comparisons choose t.test, wilcox.test,
chisq.test, cor.test, or lmFit (limma). For one-vs-all or all-vs-all
comparisons choose aov (anova), welch (welch anova), kruskal.test, or
lmFit (limma). Default: "lmFit".}

\item{padj}{Character (optional). Abbreviation of the selected p-value adjustment
method for multiple hypothesis testing correction. See ?p.adjust for
methods: "BH", "fdr", "bonferroni", "holm", etc. Default: "fdr".}

\item{metadata_feature}{Data frame (optional). Provides metadata information (e.g., pathway,
retention time) for each metabolite. Only used if data is not a
SummarizedExperiment. Row names must match metabolite names in data
columns. Default: NULL.}

\item{core}{Logical (optional). Whether consumption/release input is used. Default:
FALSE.}

\item{vst}{Logical. Whether to use variance stabilizing transformation on data when
linear modeling is used for hypothesis testing. Default: FALSE.}

\item{shapiro}{Logical. Whether to perform Shapiro-Wilk test to assess data
distribution (normal versus non-normal). Default: TRUE.}

\item{bartlett}{Logical. Whether to perform Bartlett's test. Default: TRUE.}

\item{transform}{Logical. If TRUE, data is expected to be non-log2-transformed and log2
transformation will be performed within limma and Log2FC calculation. If
FALSE, data is expected to be log2-transformed as this impacts Log2FC
calculation and limma. Default: TRUE.}

\item{save_plot}{Character (optional). File type of output plots: "svg", "png", "pdf".
Default: "svg".}

\item{save_table}{Character (optional). File type for analysis results: "csv", "xlsx",
"txt". Default: "csv".}

\item{print_plot}{Logical (optional). Whether volcano plot is printed as overview of
results. Default: TRUE.}

\item{path}{Character (optional). Path to folder where results should be saved.
Default: NULL.}
}
\value{
List of lists. Depending on parameter settings, returns dma (data frame
of each comparison), shapiro (includes data frame and plot), bartlett
(includes data frame and histogram), vst (includes data frame and plot),
and VolcanoPlot (plots of each comparison).
}
\description{
Performs differential metabolite analysis to obtain Log2FC, p-value,
adjusted p-value, and t-value when comparing two or multiple conditions.
}
\examples{
data(intracell_raw_se)
ResI <- dma(
    data = intracell_raw_se,
    metadata_info = c(
        Conditions = "Conditions", Numerator = NULL, Denominator = "HK2"
    )
)

data(intracell_raw)
Intra <- intracell_raw[-c(49:58), ] \%>\% tibble::column_to_rownames("Code")
ResI <- dma(
    data = Intra[, -c(1:3)],
    metadata_sample = Intra[, c(1:3)],
    metadata_info = c(
        Conditions = "Conditions", Numerator = NULL, Denominator = "HK2"
    )
)

}
